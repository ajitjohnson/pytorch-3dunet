model_path: /Users/aj/Dropbox (Partners HealthCare)/nirmal lab/softwares/dev/pytorch-3dunet/example_model/best_checkpoint.pytorch
model:
  name: UNet2D
  in_channels: 1
  out_channels: 1
  # use Groupnorm instead of Batchnorm for DSB; Batchnorm introduces artifacts around nuclei due to the difference
  # in intensity distribution between images with large and small cells
  layer_order: bcr
  num_groups: 2
  f_maps: [32, 64, 128]
  final_sigmoid: true
  is_segmentation: true
predictor:
  # standard in memory predictor
  name: 'StandardPredictor'
loaders:
  # save predictions to output_dir
  output_dir: /Users/aj/Dropbox (Partners HealthCare)/nirmal lab/softwares/dev/pytorch-3dunet/prediction/final_prediction
  # batch dimension; if number of GPUs is N > 1, then a batch_size of N * batch_size will automatically be taken for DataParallel
  batch_size: 1
  # how many subprocesses to use for data loading
  num_workers: 8
  raw_internal_path: /raw
  test:
    file_paths:
      - /Users/aj/Dropbox (Partners HealthCare)/nirmal lab/softwares/dev/pytorch-3dunet/prediction/image_to_predict
    slice_builder:
      # SliceBuilder class
      name: SliceBuilder
      # train patch size given to the network (adapt to fit in your GPU mem, generally the bigger patch the better)
      patch_shape: [1, 64, 64]
      # train stride between patches
      stride_shape: [1, 64, 64]
      
    transformer:
      raw:
        - name: Standardize
        - name: ToTensor
          expand_dims: true